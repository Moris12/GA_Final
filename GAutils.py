import Population
import main


CONST_CELLS_IN_SEQUENCE = 9
CONST_AZIMUTH_MIN_1 = 346
CONST_AZIMUTH_MIN_2 = 16
CONST_AZIMUTH_MIN_3 = 76
CONST_AZIMUTH_MIN_4 = 106
CONST_AZIMUTH_MIN_5 = 166
CONST_AZIMUTH_MIN_6 = 196
CONST_AZIMUTH_MIN_7 = 256
CONST_AZIMUTH_MIN_8 = 286

CONST_AZIMUTH_MAX_1 = 15
CONST_AZIMUTH_MAX_2 = 75
CONST_AZIMUTH_MAX_3 = 105
CONST_AZIMUTH_MAX_4 = 165
CONST_AZIMUTH_MAX_5 = 195
CONST_AZIMUTH_MAX_6 = 255
CONST_AZIMUTH_MAX_7 = 285
CONST_AZIMUTH_MAX_8 = 345

CONST_MAX_CELL_ANGLE = 70
CONST_MIN_CELL_ANGLE = 20

CONST_MAX_DISTANCE = 20
CONST_MIN_DISTANCE = 1

CONST_SEQUENCE_LENGTH = CONST_CELLS_IN_SEQUENCE
CONST_POPULATION_SIZE = 500
CONST_GENERATIONS = 100
CONST_GENERATIONS_TO_TEST = 1000
CONST_MUTATION_PROBABILITY = 0.3
CONST_MAX_LENGTH = 10
CONST_MAX_WIDTH = 10
CONST_MAX_LONGTITUDE = 180
CONST_MAX_LATITUDE = 90
CONST_MIN_LONGTITUDE = -180
CONST_MIN_WIDTH = 0.5
CONST_MIN_LENGTH = 0.5
CONST_MIN_LATITUDE = -90
CONST_THRESHOLD = 0.5
CONST_MAX_CABLE_LENGTH = 100
CONST_MAX_SHADE = CONST_SEQUENCE_LENGTH

CONST_LENGTH_DIFF = CONST_MAX_LENGTH - CONST_MIN_LENGTH
CONST_ANGLE_DIF = CONST_MAX_CELL_ANGLE - CONST_MIN_CELL_ANGLE
CONST_DISTANCE_DIF = (CONST_MAX_DISTANCE + 1) - CONST_MIN_DISTANCE
CONST_LANGTITUDE_DIF = CONST_MAX_LONGTITUDE - CONST_MIN_LONGTITUDE


def testing_the_algorithm_1000_runs():
    """
    This function is for research and it runs the algorithm 1000 generations
     :param:
     :return:
     """
    pop = Population.Population()
    CONST_GENERATIONS = 1000
    main.main_run(pop)

